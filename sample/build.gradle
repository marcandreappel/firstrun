apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion 29

    // https://gist.github.com/marcandreappel/722337bee66d04c538ce52c74d983cb4
    def versionPropsFile = file('version.properties')
    def versionBuild

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    ext {
        autoIncrementBuildNumber = {
            if (versionPropsFile.canRead()) {
                Properties versionProps = new Properties()
                versionProps.load(new FileInputStream(versionPropsFile))
                versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
                versionProps['VERSION_BUILD'] = versionBuild.toString()
                versionProps.store(versionPropsFile.newWriter(), null)
            } else {
                throw new FileNotFoundException("Could not read version.properties!")
            }
        }
        resetBuildNumber = {
            if (versionPropsFile.canRead()) {
                Properties versionProps = new Properties()
                versionProps.load(new FileInputStream(versionPropsFile))
                versionProps['VERSION_BUILD'] = "1"
                versionProps.store(versionPropsFile.newWriter(), null)
            } else {
                throw new FileNotFoundException("Could not read version.properties!")
            }
        }
    }

    defaultConfig {
        applicationId "fun.appel.firstrun"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode versionBuild
        versionName "1.0.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(assembleDebug)) {
            autoIncrementBuildNumber()
        } else if (taskGraph.hasTask(clean)) {
            resetBuildNumber()
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation project(':library')
}
